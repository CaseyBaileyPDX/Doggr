version: "3.7"

services:

    postgres:
        container_name: postgres
        image: postgres
        restart: always
        ports:
            - "5432:5432"
        volumes:
          - 'postgres_data:/var/lib/postgresql/data'
        environment:
            - POSTGRES_DB=doggrdb
            - POSTGRES_USER=doggr_user
            - POSTGRES_PASSWORD=doggr_pass

    # This requires a sudo chown -R 1001:1001 ./minio locally first
    minio1:
        container_name: minio1
        image: docker.io/bitnami/minio:2022
        expose:
            - "9000"
            - "9001"
        # ports:  # NOTE!  HERE WE'RE CHANGING THE PORT FROM 9000 TO 8000 because our backend already uses 9000
        #     - '8000:9000'
        #     - '8001:9001'
        environment:
            - MINIO_DEFAULT_BUCKETS=doggr:public
            - MINIO_ROOT_USER=minioUser
            - MINIO_ROOT_PASSWORD=minioPass
        volumes:
            - 'minio_data:/data'
    backend:
        container_name: backend
        image: registry.digitalocean.com/doggr/backend
        build: ./backend/
        restart: always
        #volumes:
            # This pulls in all of our code and mounts it
            # This allows us to quickly change our code and view results automatically
            # But should be REMOVED in a Production Compose setup
            #- './backend:/app'
            #- '/app/node_modules' #This prevents us from copying our node_modules when mounting
        ports:
            - "9000:9000"
        environment:
            - MINIO_HOST=nginx
            - MINIO_PORT=9000
            - MINIO_USER=minioUser
            - MINIO_PASS=minioPass
            - PGUSER=doggr_user
            - PGHOST=postgres
            - PGPASSWORD=doggr_pass
            - PGDATABASE=doggrdb
            - PGPORT=5432
            - TOKEN_SECRET=116A4857D1AC06E749417ED52EFDA0AECC534A35B5C6416A08DB355921BDF6CD
            - EXTERNAL_IP=138.197.52.82
        depends_on: #This is a lie
            - postgres
            - minio1
    frontend:
       container_name: frontend

       image: registry.digitalocean.com/doggr/frontend
       # Build and Image are mutually exclusive, and build will override, so we remove it from prod
       build: ./frontend/
       #volumes:
            #- './frontend:/app'
            #- '/app/node_modules' #This prevents us from copying our node_modules when mounting
       ports:
            - # Look ma, no nginx required!  DONT DO THIS IRL
            - "80:3000"
       environment:
            - REACT_APP_BACKEND_API=http://138.197.52.82:9000/api/v1
       depends_on:
            - postgres
            - backend


    nginx:
       container_name: nginx
       image: nginx:1.19.2-alpine
       hostname: nginx
       volumes:
           - ./nginx.conf:/etc/nginx/nginx.conf:ro
       ports:
           # NOTE!  HERE WE'RE CHANGING THE PORT FROM 9000 TO 8000 because our backend already uses 9000
           - "8000:9000"
           - "8001:9001"
       depends_on:
           - minio1

volumes:
    minio_data:
    postgres_data:

