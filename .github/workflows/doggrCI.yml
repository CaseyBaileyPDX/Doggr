name: Doggr CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_dispatch:
#    inputs:
#      version:
#        description: 'Image version'
#        required: true

jobs:
#  frontend_testing:
#    runs-on: ubuntu-latest
#
#    defaults:
#      run:
#        working-directory: frontend
#
#    steps:
#      - uses: actions/checkout@v3
#
#      - name: Setup Node Environment
#        uses: actions/setup-node@v3
#        with:
#          node-version: "14.x"
#          cache: "npm"
#          # REQUIRED FOR MONOREPOS
#          cache-dependency-path: frontend/package-lock.json
#
#      - name: Install npm dependencies
#        run: npm ci
#
#      - name: Build Frontend
#        run: npm run build --if-present
#        env:
#          CI: ""
#
#      - name: Run Tests
#        run: npm run test -- --coverage
#
#  backend_testing:
#    runs-on: ubuntu-latest
#
#    defaults:
#      run:
#        working-directory: backend
#
#    steps:
#      - uses: actions/checkout@v3
#
#      - name: Setup Node Environment
#        uses: actions/setup-node@v3
#        with:
#          node-version: "14.x"
#          cache: "npm"
#          # REQUIRED FOR MONOREPOS
#          cache-dependency-path: backend/package-lock.json
#
#      - name: Install npm dependencies
#        run: npm ci
#
#      - name: Build Frontend
#        run: npm run build --if-present
#
#      - name: Run Tests
#        run: npm run testCI

  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Deploy Stack
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY_SECRET }}
          port: 22
          script: |
            cd /app
            touch imin.txt

#  build_and_push:
#    runs-on: ubuntu-latest
#
#    # Ensure test job passes before pushing image.
#    #needs: test
#
#    steps:
#      - name: Checkout the repo
#        uses: actions/checkout@v2
##      - name: Create env file
##        run: |
##          touch .env
##          echo "${{ secrets.SERVER_ENV_PROD }}" > .env
##          cat .env
#      - name: Build image
#        run: docker compose -f docker-compose.yml build
#
#      - name: Install doctl
#        uses: digitalocean/action-doctl@v2
#        with:
#          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
#
#      - name: Log in to DO Container Registry
#        run: doctl registry login --expiry-seconds 600
#
#      - name: Push image to DO Container Registry
#        run: docker compose -f docker-compose.yml push
#
#      - name: Deploy Stack
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.GL_SSH_HOST }}
#          username: ${{ secrets.GL_SSH_USERNAME }}
#          key: ${{ secrets.SSH_KEY_SECRET }}
#          port: 22
#          script: |
#            cd /app
#            touch imin.txt
#
