name: Doggr CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_dispatch:
#    inputs:
#      version:
#        description: 'Image version'
#        required: true

jobs:
#  frontend_testing:
#    runs-on: ubuntu-latest
#
#    defaults:
#      run:
#        working-directory: frontend
#
#    steps:
#      - uses: actions/checkout@v3
#
#      - name: Setup Node Environment
#        uses: actions/setup-node@v3
#        with:
#          node-version: "14.x"
#          cache: "npm"
#          # REQUIRED FOR MONOREPOS
#          cache-dependency-path: frontend/package-lock.json
#
#      - name: Install npm dependencies
#        run: npm ci
#
#      - name: Build Frontend
#        run: npm run build --if-present
#        env:
#          CI: ""
#
#      - name: Run Tests
#        run: npm run test -- --coverage
#
#  backend_testing:
#    runs-on: ubuntu-latest
#
#    defaults:
#      run:
#        working-directory: backend
#
#    steps:
#      - uses: actions/checkout@v3
#
#      - name: Setup Node Environment
#        uses: actions/setup-node@v3
#        with:
#          node-version: "14.x"
#          cache: "npm"
#          # REQUIRED FOR MONOREPOS
#          cache-dependency-path: backend/package-lock.json
#
#      - name: Install npm dependencies
#        run: npm ci
#
#      - name: Build Frontend
#        run: npm run build --if-present
#
#      - name: Run Tests
#        run: npm run testCI

#  deploy:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Deploy Stack
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.SSH_HOST }}
#          username: ${{ secrets.SSH_USERNAME }}
#          key: ${{ secrets.SSH_KEY_SECRET }}
#          port: 22
#          script: |
#            docker-compose down
#            touch docker_down.txt
#            docker-compose up -d
#            touch docker_up.txt

  build_and_push:
    runs-on: ubuntu-latest

    # Ensure test job passes before pushing image.
    #needs: test

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
#      - name: Create env files
#        run: |
#          touch .env
#          echo "${{ secrets.SERVER_ENV_PROD }}" > .env
#          cat .env
      - name: Build image
        run: docker-compose -f docker-compose.yml build

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DO Container Registry
        run: doctl registry login --expiry-seconds 600

      - name: Push image to DO Container Registry
        run: docker-compose -f docker-compose.yml push

      - name: Drop old compose on Prod
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY_SECRET }}
          port: 22
          script: |
            cd /app/Doggr
            rm -rf ./*
            docker-compose -f /app/Doggr/docker-compose.yml down
            touch docker_down.txt  

      - name: copy nginx via ssh
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY_SECRET }}
          port: 22
          source: "nginx.conf"
          target: "/app/Doggr"

      - name: copy compose via ssh
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY_SECRET }}
          port: 22
          source: "docker-compose.prod.yml"
          target: "/app/Doggr"


      - name: Deploy Stack
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: root
          key: ${{ secrets.SSH_KEY_SECRET }}
          port: 22
          script: |                
            cd /app/Doggr
            doctl registry login
            rm docker-compose.yml 
            mv docker-compose.prod.yml docker-compose.yml
            sudo docker-compose up -d 
            touch docker_up.txt

#      - name: copy file via ssh password
#        uses: garygrossgarten/github-action-scp@release
#        with:
#          host: ${{ secrets.SSH_HOST }}
#          username: ${{ secrets.SSH_USERNAME }}
#          password: doggrpass
#          port: 22
#          local: docker-compose.yml
#          remote: "/app/Doggr/docker-compose.yml"
